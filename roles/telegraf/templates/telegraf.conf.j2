# Telegraf Configuration
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"

  hostname = ""
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb]]
  urls = ["http://localhost:8086"]
  database = "metrics"
  namedrop = ["logs_*"]

[[outputs.influxdb]]
  urls = ["http://localhost:8086"]
  database = "logs"
  namepass = ["logs_*"]


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = true
  ## If true, compute and report the sum of all non-idle CPU states.
  report_active = false

[[inputs.disk]]
  ## By default stats will be gathered for all mount points.
  ## Set mount_points will restrict the stats to only the specified mount points.
  # mount_points = ["/"]

  ## Ignore mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# Read metrics about disk IO by device
[[inputs.diskio]]
  # default configuration

[[inputs.kernel]]
  # no configuration

# Read metrics about memory usage
[[inputs.mem]]
  # no configuration

# Gather metrics about network interfaces
[[inputs.net]]
    # default configuration

# Read metrics about system load & uptime
[[inputs.system]]
  # no configuration

[[inputs.syslog]]
  server = "udp://:6514"
  name_prefix = "logs_"

[[inputs.influxdb]]
  urls = [
    "http://localhost:8086/debug/vars"
  ]

[[inputs.dns_query]]
  servers = ["dns0.essex.ac.uk", "dns1.essex.ac.uk", "dns2.essex.ac.uk"]
  domains = ["www.essex.ac.uk", "edrm.essex.ac.uk", "feds.essex.ac.uk"]
  record_type = "A"

[[inputs.http_response]]
  urls = [
    "https://edrm.essex.ac.uk/esf"
    , "https://edrm.essex.ac.uk/updown/updown.html"
    , "https://forms.essex.ac.uk"
    , "https://www.essex.ac.uk"
    , "https://www.essex.ac.uk/clearing"
    ]

 [[inputs.ping]]
   urls = ["www.essex.ac.uk", "edrm.essex.ac.uk", "sp.essex.ac.uk", "forms.essex.ac.uk"]
   method = "native"
 
 [[inputs.x509_cert]]
   sources = ["https://forms.essex.ac.uk:443", "https://edrm.essex.ac.uk:443", "https://www.essex.ac.uk:443"]

# # Read logging output from the Docker engine
[[inputs.docker_log]]
 endpoint = "unix:///var/run/docker.sock"
 source_tag = true
 name_prefix = "logs_"

# Read metrics about docker containers
[[inputs.docker]]
   endpoint = "unix:///var/run/docker.sock"
   source_tag = true

# # Read metrics from one or many prometheus clients
[[inputs.prometheus]]
  urls = [
    "https://beholder.buttes.xyz/grafana/metrics"
    ,"http://localhost:8081"
    ,"http://localhost:9000/metrics"
  ]

  